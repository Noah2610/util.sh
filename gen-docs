#!/bin/bash
# Generates a documentation markdown file for util.sh
# It documents all functions by grabbing the function names
# and their documentation comments above the their header.

# shellcheck disable=2155

# shellcheck source=./util.sh
source "./util.sh"

UTIL_SH="${ROOT}/util.sh"

check_file "$UTIL_SH"
check "pcregrep"
check "sed"

function gen_docs {
    local doc_groups
    # argument used as nameref
    get_function_headers_with_docs doc_groups

    local doc_group
    local doc_lines
    local code_line
    local code_doc
    local function_name
    local variable_name

    for doc_group in "${doc_groups[@]}"; do
        mapfile -t doc_lines <<< "$doc_group"
        code_line="${doc_lines[-1]}"
        if [ -n "$code_line" ] \
            && [[ $code_line =~ ^\s*function ]]
        then
            # Is a function header
            function_name="$(
                echo "$code_line" \
                    | sed -En 's/^\s*function\s+(\w+)\s+.*$/\1/p'
            )"
            echo "FN: ${function_name}"
        else
            echo "ZERO"
        fi
    done

    # echo "${doc_groups[0]}"
}

function get_function_headers_with_docs {
    # https://stackoverflow.com/a/49971213
    local -n return_doc_groups="$1"
    local lftmp="<NEWLINE>"

    mapfile -t return_doc_groups < <(
        pcregrep -MA1 \
            '(^\s*#[^\n]+$)+' \
            "$UTIL_SH" \
            | sed ':a;N;$!ba;s/\n/'"${lftmp}"'/g' \
            | sed 's/'"${lftmp}"'--'"${lftmp}"'/\n/g'
            # https://stackoverflow.com/a/1252191
    )

    local i
    for (( i = 0; i < ${#return_doc_groups[@]}; i++ )); do
        return_doc_groups[i]="${doc_groups[i]//"$lftmp"/$'\n'}"
    done
}

gen_docs "$@"
